<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User - PeerJS SignalR Sesli Görüşme</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        <h2>User - PeerJS SignalR Sesli Görüşme</h2>

        <div>
            <label for="peer-id">Peer ID:</label>
            <input type="text" id="peer-id" class="form-control" disabled>
        </div>

        <div id="remote-audio-container" class="mt-5">
            <h4>Ses Akışları:</h4>
        </div>
    </div>

    <!-- Modal for user name input -->
    <div class="modal fade" id="nameModal" tabindex="-1" aria-labelledby="nameModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="nameModalLabel">İsim Giriniz</h5>
                </div>
                <div class="modal-body">
                    <label for="user-name">İsim:</label>
                    <input type="text" id="user-name" class="form-control">
                </div>
                <div class="modal-footer">
                    <button type="button" id="save-name" class="btn btn-primary">Kaydet</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/peerjs@1.3.1/dist/peerjs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.12/signalr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        const peer = new Peer();
        const peerIdInput = document.getElementById('peer-id');
        const remoteAudioContainer = document.getElementById('remote-audio-container');
        let currentPeerId = '';
        let userName = '';

        const connection = new signalR.HubConnectionBuilder().withUrl("/driverHub").build();

        // When PeerJS generates a Peer ID
        peer.on('open', (id) => {
            currentPeerId = id;
            peerIdInput.value = id;

            // Show modal to ask for user name
            const nameModal = new bootstrap.Modal(document.getElementById('nameModal'), {
                backdrop: 'static',
                keyboard: false
            });
            nameModal.show();

            document.getElementById('save-name').onclick = function () {
                userName = document.getElementById('user-name').value;

                // Hide the modal after saving name
                nameModal.hide();

                // Register Peer ID and name on the server
                connection.start().then(() => {
                    connection.invoke("RegisterPeerWithName", currentPeerId, userName);
                });
            };
        });

        // Handle incoming calls
        peer.on('call', (call) => {
            call.answer();  // Answer without sending our own stream
            call.on('stream', (remoteStream) => {
                addRemoteStream(remoteStream, call.peer);
            });
        });

        // Add remote audio stream to the page
        function addRemoteStream(remoteStream, peerId) {
            let audioElement = document.getElementById(`audio-${peerId}`);
            if (!audioElement) {
                audioElement = document.createElement('audio');
                audioElement.id = `audio-${peerId}`;
                audioElement.controls = true;
                audioElement.autoplay = true;
                remoteAudioContainer.appendChild(audioElement);
            }
            audioElement.srcObject = remoteStream;
        }

    </script>
</body>
</html>

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Yönetici Paneli</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- SignalR Kütüphanesi -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/signalr/5.0.11/signalr.min.js"></script>
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Yönetici Paneli</h1>
        <h3>Bağlanan Konuşmacılar</h3>
        <form id="peer-form">
            <div class="list-group" id="peer-list"></div>
            <button type="button" class="btn btn-primary mt-3" id="connect-button">Bağla</button>
        </form>
    </div>

    <!-- Bootstrap JS (İsteğe Bağlı) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        const connection = new signalR.HubConnectionBuilder().withUrl("/voiceChatHub").build();

        connection.start().then(() => {
            console.log("Yönetici olarak bağlanıldı.");
            connection.invoke("RegisterAdmin").catch(err => console.error("RegisterAdmin hatası:", err));
        }).catch(err => console.error("SignalR bağlantı hatası:", err));

        // Peer listesi güncellendiğinde listede göster
        connection.on("UpdatePeerList", (peers) => {
            const peerList = document.getElementById('peer-list');
            peerList.innerHTML = '';  // Listeyi temizle

            peers.forEach(peerId => {
                const listItem = document.createElement('div');
                listItem.className = 'list-group-item d-flex justify-content-between align-items-center';
                listItem.innerHTML = `
                        <div>
                            <input class="form-check-input me-2 peer-checkbox" type="checkbox" value="${peerId}" id="checkbox-${peerId}">
                            <label class="form-check-label" for="checkbox-${peerId}">
                                ${peerId}
                            </label>
                        </div>
                    `;
                peerList.appendChild(listItem);
            });
        });

        // "Bağla" butonuna tıklandığında
        document.getElementById('connect-button').addEventListener('click', () => {
            const selectedPeers = Array.from(document.querySelectorAll('.peer-checkbox:checked'))
                .map(input => input.value);

            if (selectedPeers.length > 1) {
                console.log("Seçilen Peer'lar:", selectedPeers);
                connection.invoke("StartVoiceCommunication", selectedPeers)
                    .catch(err => console.error("StartVoiceCommunication hatası:", err));
            } else {
                alert("Lütfen en az iki konuşmacı seçin.");
            }
        });
    </script>
</body>
</html>
